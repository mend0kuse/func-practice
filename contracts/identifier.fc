#include "imports/stdlib.fc";
#include "imports/utils.fc";

(slice, slice) load_data() inline {
    slice ds = get_data().begin_parse();

    slice manager_address = ds~load_msg_addr();
    slice address_saved_by_manager = ds.slice_bits() > 0 ? ds~load_msg_addr() : "";
    
    return (
         manager_address,
         address_saved_by_manager
    );
}

() save_manager_addresses(slice address_to_save) impure inline {
    (slice manager_address, _) = load_data();
    set_data(begin_cell().store_slice(manager_address).store_slice(address_to_save).end_cell());
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    int op = in_msg_body~load_uint(32);
	int query_id = in_msg_body~load_uint(64);

    slice sender_address = parse_sender_address(in_msg_full);
    (slice manager_address, slice saved_by_manager_address) = load_data();

    if(op == 1) {
        throw_if(1001, ~ equal_slices(manager_address, sender_address));
        
        slice address_to_save = in_msg_body~load_msg_addr();
        save_manager_addresses(address_to_save);
        
        return ();
    }

    if(op == 2) {
        var msg = 
            begin_cell()
            .store_uint(0x18, 6)
            .store_slice(sender_address)
            .store_coins(0)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .store_uint(3, 32)
            .store_uint(query_id, 64)
            .store_slice(manager_address);

        if saved_by_manager_address.slice_empty?() {
            msg.store_uint(0, 2);
        } else {
            msg.store_slice(saved_by_manager_address);
        }

        send_raw_message(msg.end_cell(), 64);
        return ();
    }

    throw(6); ;; unknown op
}

slice get_manager_address() method_id {
    (slice manager_address, _) = load_data();
    return manager_address;
}

slice get_saved_by_manager_address() method_id {
    (_, slice saved_by_manager_address) = load_data();
    return saved_by_manager_address;
}